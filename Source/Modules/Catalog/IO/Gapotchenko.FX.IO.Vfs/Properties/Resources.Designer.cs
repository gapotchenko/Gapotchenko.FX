//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Gapotchenko.FX.IO.Vfs.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Gapotchenko.FX.IO.Vfs.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Access to the path &apos;{0}&apos; is denied..
        /// </summary>
        internal static string AccessToPathXIsDenied {
            get {
                return ResourceManager.GetString("AccessToPathXIsDenied", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot create &apos;{0}&apos; because a file or directory with the same name already exists..
        /// </summary>
        internal static string CannotCreateAlreadyExistingEntryX {
            get {
                return ResourceManager.GetString("CannotCreateAlreadyExistingEntryX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File system does not support reading..
        /// </summary>
        internal static string CannotReadFS {
            get {
                return ResourceManager.GetString("CannotReadFS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File system does not support writing..
        /// </summary>
        internal static string CannotWriteFS {
            get {
                return ResourceManager.GetString("CannotWriteFS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find directory &apos;{0}&apos;..
        /// </summary>
        internal static string CouldNotFindDirectoryX {
            get {
                return ResourceManager.GetString("CouldNotFindDirectoryX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find file &apos;{0}&apos;..
        /// </summary>
        internal static string CouldNotFindFileX {
            get {
                return ResourceManager.GetString("CouldNotFindFileX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find a part of the path &apos;{0}&apos;..
        /// </summary>
        internal static string CouldNotFindPartOfPathX {
            get {
                return ResourceManager.GetString("CouldNotFindPartOfPathX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The directory &apos;{0}&apos; already exists..
        /// </summary>
        internal static string DirectoryXAlreadyExists {
            get {
                return ResourceManager.GetString("DirectoryXAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The directory &apos;{0}&apos; is not empty..
        /// </summary>
        internal static string DirectoryXIsNotEmpty {
            get {
                return ResourceManager.GetString("DirectoryXIsNotEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enumeration value is out of legal range..
        /// </summary>
        internal static string EnumValueIsOutOfLegalRange {
            get {
                return ResourceManager.GetString("EnumValueIsOutOfLegalRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File storage cannot be opened in {0} mode..
        /// </summary>
        internal static string FileStorageCannotBeOpenedInXMode {
            get {
                return ResourceManager.GetString("FileStorageCannotBeOpenedInXMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file is too long. This operation is limited to supporting files less than 2 gigabytes in size..
        /// </summary>
        internal static string FileTooLong2GB {
            get {
                return ResourceManager.GetString("FileTooLong2GB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file &apos;{0}&apos; already exists..
        /// </summary>
        internal static string FileXAlreadyExists {
            get {
                return ResourceManager.GetString("FileXAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The object does not implement {0} interface..
        /// </summary>
        internal static string ObjectDoesNotImplXInterface {
            get {
                return ResourceManager.GetString("ObjectDoesNotImplXInterface", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path is empty..
        /// </summary>
        internal static string PathIsEmpty {
            get {
                return ResourceManager.GetString("PathIsEmpty", resourceCulture);
            }
        }
    }
}
